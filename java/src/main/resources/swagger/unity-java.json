{
  "swagger": "2.0",
  "info": {
    "title": "Unity java server endpoints",
    "description": "All the endpoints and their requests/responses",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "schemes": [
    "http"
  ],
  "paths": {
    "/connect": {
      "get": {
        "summary": "Checks connection and returns map of games with latest build",
        "description": "Checks connection and returns map of games with latest build",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Map of game with latest build",
            "examples": {
              "application/text": "{\"testGame2\": \"1.1\",\"testGame\": \"1.1\"}"
            }
          }
        }
      }
    },
    "/game": {
      "get": {
        "summary": "Returns all the game names according to directories on the server",
        "description": "Returns all the game names according to directories on the server",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of game names",
            "examples": {
              "application/text": "[\"testGame\"]"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new directory for a game",
        "description": "Create a new directory for a game",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the name of the created directory",
            "examples": {
              "application/text": "testGame"
            }
          },
          "400": {
            "description": "Returns an exception, that a new directory was not created",
            "examples": {
              "application/text": "Game directory testGame/ does not exist"
            }
          }
        }
      }
    },
    "/game/build": {
      "get": {
        "summary": "Returns all builds for a game",
        "description": "Returns all builds from a game directory on the server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          }
        ],
        "responses": {
          "200": {
            "description": "List of builds",
            "examples": {
              "application/text": "[\"1.0, 1.1\"]"
            }
          },
          "400": {
            "description": "Returns an exception, that game directory does not exist",
            "examples": {
              "application/text": "Game directory testGame/ does not exist"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new directory for a build",
        "description": "Create a new directory for a build inside game directory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          },
          {
            "$ref": "#/parameters/Build"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the name of the created directory",
            "examples": {
              "application/text": "1.0"
            }
          },
          "400": {
            "description": "Returns an exception, that a new directory was not created",
            "examples": {
              "application/text": "Game directory testGame/1.0 does not exist"
            }
          }
        }
      }
    },
    "/video": {
      "get": {
        "summary": "Get all video names for a game/build",
        "description": "Get all video names for a game/build",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          },
          {
            "$ref": "#/parameters/Build"
          }
        ],
        "responses": {
          "200": {
            "description": "List of video names",
            "examples": {
              "application/text": "[\"video.mp4\"]"
            }
          }
        }
      },
      "post": {
        "summary": "Saves game recording",
        "description": "Saves game recording inside resource/video directory",
        "consumes": [
          "video/mp4"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          },
          {
            "$ref": "#/parameters/Build"
          },
          {
            "$ref": "#/parameters/File"
          }
        ],
        "responses": {
          "200": {
            "description": "Video saved on the server",
            "examples": {
              "application/text": "File is uploaded successfully"
            }
          },
          "400": {
            "description": "There were some problems uploading the video",
            "examples": {
              "application/text": "Game directory [game/build] does not exist"
            }
          }
        }
      }
    },
    "/video/recent": {
      "get": {
        "summary": "Returns the most recent video uploaded to the server",
        "description": "Returns the relative path for the most recent video uploaded to the server",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Path to the video",
            "examples": {
              "application/text": "./resources/videos/{gameName}/{buildId}/{playRun}.mp4"
            }
          },
          "400": {
            "description": "Video could not be found",
            "examples": {
              "application/text": "Video could not be found"
            }
          },
          "400": {
            "description": "There are no videos on the server",
            "examples": {
              "application/text": "There are no videos"
            }
          }
        }
      }
    },
    "/playrun": {
      "get": {
        "summary": "Get play run report for a video",
        "description": "Get play run report for a game/build/video",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Game"
          },
          {
            "$ref": "#/parameters/Build"
          },
          {
            "$ref": "#/parameters/Video"
          }
        ],
        "responses": {
          "200": {
            "description": "Playrun report found for the game/build/video",
            "schema": {
              "$ref": "#/definitions/PlayRunReportDTO"
            },
            "examples": {
              "PlayRunReportDTO": {
                "gameRef": "Game name",
                "buildRef": "beta.1.0",
                "videoRef": "Video name",
                "bugReports": [
                  {
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save play run report",
        "description": "Saves game recording inside resource/video directory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Play run report",
            "description": "Play run report",
            "schema": {
              "$ref": "#/definitions/PlayRunReportDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report uploaded successfully",
            "examples": {
              "application/text": "Report uploaded successfully"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "Game": {
      "description": "Name of the game",
      "name": "game",
      "type": "string",
      "required": true,
      "in": "query",
      "minLength": 1,
      "maxLength": 50
    },
    "Build": {
      "description": "Games build",
      "name": "build",
      "type": "string",
      "required": true,
      "in": "query",
      "minLength": 1,
      "maxLength": 50
    },
    "Video": {
      "description": "Players run identifier",
      "name": "runId",
      "type": "string",
      "required": true,
      "in": "query",
      "minLength": 1,
      "maxLength": 50
    },
    "File": {
      "description": "Play run recording",
      "name": "file",
      "type": "file",
      "required": true,
      "in": "formData"
    }
  },
  "definitions": {
    "TimeVideoReference": {
      "description": "Bug reporting time frame",
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "description": "Timestamp when the bug started",
          "type": "number",
          "example": 15.4
        },
        "to": {
          "description": "Timestamp when the bug finished",
          "type": "number",
          "example": 22.92
        }
      }
    },
    "BugReportDTO": {
      "description": "Bug report DTO",
      "type": "object",
      "required": [
        "bugName",
        "bugDescription",
        "timeVideoReference"
      ],
      "properties": {
        "bugName": {
          "description": "Bug name",
          "type": "string",
          "example": "Wall glitch",
          "maxLength": 100
        },
        "bugDescription": {
          "description": "Bug description",
          "type": "string",
          "example": "I walked through a wall",
          "maxLength": 1500
        },
        "timeVideoReference": {
          "description": "Time period when the bug happened",
          "type": "object",
          "$ref": "#/definitions/TimeVideoReference",
          "example": {
            "application/json": {
              "from": 5.4,
              "to": 14.32
            }
          }
        }
      }
    },
    "PlayRunReportDTO": {
      "description": "Play run report DTO",
      "type": "object",
      "required": [
        "gameRef",
        "buildRef",
        "videoRef",
        "bugReports"
      ],
      "properties": {
        "gameRef": {
          "description": "Name of the game",
          "type": "string",
          "example": "The fun adventures of ...",
          "minLength": 1,
          "maxLength": 50
        },
        "buildRef": {
          "description": "Build id identifies which build of a game the bug was reported on",
          "type": "string",
          "example": "1.0.1",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "^\\d+(\\.\\d+)*$"
        },
        "videoRef": {
          "description": "Run id identifies which run it belongs to",
          "type": "string",
          "example": "1.0.1",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "^\\d+(\\.\\d+)*$"
        },
        "bugReports": {
          "description": "Time of the video where the bug was reported",
          "type": "array",
          "$ref": "#/definitions/BugReportDTO",
          "example": {
            "application/json": [
              {
                "buildId": "1.0.1",
                "runId": "1.0.1",
                "time": "10",
                "notes": "I walked through a wall"
              }
            ]
          }
        }
      }
    }
  }
}
